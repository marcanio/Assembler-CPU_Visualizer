vendor_name = ModelSim
source_file = 1, 2-to-1-mux.v
source_file = 1, 2to1mux.v
source_file = 1, D:/school_stuff/SeniorDesign/i281Verilog/_2to1mux.v
source_file = 1, D:/school_stuff/SeniorDesign/i281Verilog/_programCounter.v
source_file = 1, ProgramCounter_Stoyt.v
source_file = 1, _programCounterMultiplexer.v
source_file = 1, D:/school_stuff/SeniorDesign/i281Verilog/_6WideBusMux.v
source_file = 1, D:/school_stuff/SeniorDesign/i281Verilog/_Control_FSM.v
source_file = 1, D:/school_stuff/SeniorDesign/i281Verilog/db/i281.cbx.xml
design_name = _Control_FSM
instance = comp, \IMEM_WRITE_ENABLE~output , IMEM_WRITE_ENABLE~output, _Control_FSM, 1
instance = comp, \PC_MUX~output , PC_MUX~output, _Control_FSM, 1
instance = comp, \PC_WRITE_ENABLE~output , PC_WRITE_ENABLE~output, _Control_FSM, 1
instance = comp, \REG_PORT0_SELECT[0]~output , REG_PORT0_SELECT[0]~output, _Control_FSM, 1
instance = comp, \REG_PORT0_SELECT[1]~output , REG_PORT0_SELECT[1]~output, _Control_FSM, 1
instance = comp, \REG_PORT1_SELECT[0]~output , REG_PORT1_SELECT[0]~output, _Control_FSM, 1
instance = comp, \REG_PORT1_SELECT[1]~output , REG_PORT1_SELECT[1]~output, _Control_FSM, 1
instance = comp, \REG_WRITE_SELECT[0]~output , REG_WRITE_SELECT[0]~output, _Control_FSM, 1
instance = comp, \REG_WRITE_SELECT[1]~output , REG_WRITE_SELECT[1]~output, _Control_FSM, 1
instance = comp, \REG_WRITE_ENABLE~output , REG_WRITE_ENABLE~output, _Control_FSM, 1
instance = comp, \ALU_SOURCE_MUX~output , ALU_SOURCE_MUX~output, _Control_FSM, 1
instance = comp, \ALU_SELECT0~output , ALU_SELECT0~output, _Control_FSM, 1
instance = comp, \ALU_SELECT1~output , ALU_SELECT1~output, _Control_FSM, 1
instance = comp, \FLAGS_WRITE_ENABLE~output , FLAGS_WRITE_ENABLE~output, _Control_FSM, 1
instance = comp, \ALU_RESULT_MUX~output , ALU_RESULT_MUX~output, _Control_FSM, 1
instance = comp, \DMEM_INPUT_MUX~output , DMEM_INPUT_MUX~output, _Control_FSM, 1
instance = comp, \DMEM_WRITE_ENABLE~output , DMEM_WRITE_ENABLE~output, _Control_FSM, 1
instance = comp, \REG_WRITEBACK_MUX~output , REG_WRITEBACK_MUX~output, _Control_FSM, 1
instance = comp, \INPUT_DATAC~input , INPUT_DATAC~input, _Control_FSM, 1
instance = comp, \INPUT_DATACF~input , INPUT_DATACF~input, _Control_FSM, 1
instance = comp, \IMEM_WRITE_ENABLE~0 , IMEM_WRITE_ENABLE~0, _Control_FSM, 1
instance = comp, \OVERFLOW_FLAG~input , OVERFLOW_FLAG~input, _Control_FSM, 1
instance = comp, \ZERO_FLAG~input , ZERO_FLAG~input, _Control_FSM, 1
instance = comp, \BRGE~input , BRGE~input, _Control_FSM, 1
instance = comp, \BRG~input , BRG~input, _Control_FSM, 1
instance = comp, \OR75~1 , OR75~1, _Control_FSM, 1
instance = comp, \JUMP~input , JUMP~input, _Control_FSM, 1
instance = comp, \BRE_BRZ~input , BRE_BRZ~input, _Control_FSM, 1
instance = comp, \BRNE_BRNZ~input , BRNE_BRNZ~input, _Control_FSM, 1
instance = comp, \OR75~0 , OR75~0, _Control_FSM, 1
instance = comp, \NEGATIVE_FLAG~input , NEGATIVE_FLAG~input, _Control_FSM, 1
instance = comp, \OR75~2 , OR75~2, _Control_FSM, 1
instance = comp, \Y[0]~input , Y[0]~input, _Control_FSM, 1
instance = comp, \X[0]~input , X[0]~input, _Control_FSM, 1
instance = comp, \LOADF~input , LOADF~input, _Control_FSM, 1
instance = comp, \STOREF~input , STOREF~input, _Control_FSM, 1
instance = comp, \MOVE~input , MOVE~input, _Control_FSM, 1
instance = comp, \OR35~0 , OR35~0, _Control_FSM, 1
instance = comp, \ADD~input , ADD~input, _Control_FSM, 1
instance = comp, \SUB~input , SUB~input, _Control_FSM, 1
instance = comp, \CMP~input , CMP~input, _Control_FSM, 1
instance = comp, \OR22~0 , OR22~0, _Control_FSM, 1
instance = comp, \INPUT_DATADF~input , INPUT_DATADF~input, _Control_FSM, 1
instance = comp, \ADDI~input , ADDI~input, _Control_FSM, 1
instance = comp, \SUBI~input , SUBI~input, _Control_FSM, 1
instance = comp, \OR44~1 , OR44~1, _Control_FSM, 1
instance = comp, \SHIFTL~input , SHIFTL~input, _Control_FSM, 1
instance = comp, \SHIFTR~input , SHIFTR~input, _Control_FSM, 1
instance = comp, \OR44~0 , OR44~0, _Control_FSM, 1
instance = comp, \OR44~2 , OR44~2, _Control_FSM, 1
instance = comp, \AND51~0 , AND51~0, _Control_FSM, 1
instance = comp, \X[1]~input , X[1]~input, _Control_FSM, 1
instance = comp, \Y[1]~input , Y[1]~input, _Control_FSM, 1
instance = comp, \AND49~0 , AND49~0, _Control_FSM, 1
instance = comp, \STORE~input , STORE~input, _Control_FSM, 1
instance = comp, \AND54~0 , AND54~0, _Control_FSM, 1
instance = comp, \AND54~1 , AND54~1, _Control_FSM, 1
instance = comp, \AND53~0 , AND53~0, _Control_FSM, 1
instance = comp, \LOAD~input , LOAD~input, _Control_FSM, 1
instance = comp, \LOADI_LOADP~input , LOADI_LOADP~input, _Control_FSM, 1
instance = comp, \INPUT_DATAD~input , INPUT_DATAD~input, _Control_FSM, 1
instance = comp, \NOOP~input , NOOP~input, _Control_FSM, 1
instance = comp, \CARRY_FLAG~input , CARRY_FLAG~input, _Control_FSM, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
