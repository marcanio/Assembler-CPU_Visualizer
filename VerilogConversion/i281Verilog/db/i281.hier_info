|_4x8BitRegisters
REG_INPUT[0] => REG_INPUT[0].IN4
REG_INPUT[1] => REG_INPUT[1].IN4
REG_INPUT[2] => REG_INPUT[2].IN4
REG_INPUT[3] => REG_INPUT[3].IN4
REG_INPUT[4] => REG_INPUT[4].IN4
REG_INPUT[5] => REG_INPUT[5].IN4
REG_INPUT[6] => REG_INPUT[6].IN4
REG_INPUT[7] => REG_INPUT[7].IN4
READ_PORT0_SELECT[0] => READ_PORT0_SELECT[0].IN1
READ_PORT0_SELECT[1] => READ_PORT0_SELECT[1].IN1
WRITE_SELECT[0] => WRITE_SELECT[0].IN1
WRITE_SELECT[1] => WRITE_SELECT[1].IN1
READ_PORT1_SELECT[0] => READ_PORT1_SELECT[0].IN1
READ_PORT1_SELECT[1] => READ_PORT1_SELECT[1].IN1
Clock => Clock.IN4
Reset => Reset.IN4
WRITE_ENABLE => WRITE_ENABLE.IN1
REG_A[0] <= REG_A[0].DB_MAX_OUTPUT_PORT_TYPE
REG_A[1] <= REG_A[1].DB_MAX_OUTPUT_PORT_TYPE
REG_A[2] <= REG_A[2].DB_MAX_OUTPUT_PORT_TYPE
REG_A[3] <= REG_A[3].DB_MAX_OUTPUT_PORT_TYPE
REG_A[4] <= REG_A[4].DB_MAX_OUTPUT_PORT_TYPE
REG_A[5] <= REG_A[5].DB_MAX_OUTPUT_PORT_TYPE
REG_A[6] <= REG_A[6].DB_MAX_OUTPUT_PORT_TYPE
REG_A[7] <= REG_A[7].DB_MAX_OUTPUT_PORT_TYPE
REG_B[0] <= REG_B[0].DB_MAX_OUTPUT_PORT_TYPE
REG_B[1] <= REG_B[1].DB_MAX_OUTPUT_PORT_TYPE
REG_B[2] <= REG_B[2].DB_MAX_OUTPUT_PORT_TYPE
REG_B[3] <= REG_B[3].DB_MAX_OUTPUT_PORT_TYPE
REG_B[4] <= REG_B[4].DB_MAX_OUTPUT_PORT_TYPE
REG_B[5] <= REG_B[5].DB_MAX_OUTPUT_PORT_TYPE
REG_B[6] <= REG_B[6].DB_MAX_OUTPUT_PORT_TYPE
REG_B[7] <= REG_B[7].DB_MAX_OUTPUT_PORT_TYPE
REG_C[0] <= REG_C[0].DB_MAX_OUTPUT_PORT_TYPE
REG_C[1] <= REG_C[1].DB_MAX_OUTPUT_PORT_TYPE
REG_C[2] <= REG_C[2].DB_MAX_OUTPUT_PORT_TYPE
REG_C[3] <= REG_C[3].DB_MAX_OUTPUT_PORT_TYPE
REG_C[4] <= REG_C[4].DB_MAX_OUTPUT_PORT_TYPE
REG_C[5] <= REG_C[5].DB_MAX_OUTPUT_PORT_TYPE
REG_C[6] <= REG_C[6].DB_MAX_OUTPUT_PORT_TYPE
REG_C[7] <= REG_C[7].DB_MAX_OUTPUT_PORT_TYPE
REG_D[0] <= REG_D[0].DB_MAX_OUTPUT_PORT_TYPE
REG_D[1] <= REG_D[1].DB_MAX_OUTPUT_PORT_TYPE
REG_D[2] <= REG_D[2].DB_MAX_OUTPUT_PORT_TYPE
REG_D[3] <= REG_D[3].DB_MAX_OUTPUT_PORT_TYPE
REG_D[4] <= REG_D[4].DB_MAX_OUTPUT_PORT_TYPE
REG_D[5] <= REG_D[5].DB_MAX_OUTPUT_PORT_TYPE
REG_D[6] <= REG_D[6].DB_MAX_OUTPUT_PORT_TYPE
REG_D[7] <= REG_D[7].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT0[0] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[1] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[2] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[3] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[4] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[5] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[6] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT0[7] <= _8Wide4To1BusMux:Output0.muxresult
REG_OUTPUT1[0] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[1] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[2] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[3] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[4] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[5] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[6] <= _8Wide4To1BusMux:Output1.muxresult
REG_OUTPUT1[7] <= _8Wide4To1BusMux:Output1.muxresult


|_4x8BitRegisters|_2to4DecoderWithEnable:RegDec
Enable => Decoder_Output.IN1
Enable => Decoder_Output.IN1
Enable => Decoder_Output.IN1
Enable => Decoder_Output.IN1
Decoder_Input[0] => Decoder_Output.IN0
Decoder_Input[0] => Decoder_Output.IN0
Decoder_Input[0] => Decoder_Output.IN0
Decoder_Input[0] => Decoder_Output.IN0
Decoder_Input[1] => Decoder_Output.IN1
Decoder_Input[1] => Decoder_Output.IN1
Decoder_Input[1] => Decoder_Output.IN1
Decoder_Input[1] => Decoder_Output.IN1
Decoder_Output[0] <= Decoder_Output.DB_MAX_OUTPUT_PORT_TYPE
Decoder_Output[1] <= Decoder_Output.DB_MAX_OUTPUT_PORT_TYPE
Decoder_Output[2] <= Decoder_Output.DB_MAX_OUTPUT_PORT_TYPE
Decoder_Output[3] <= Decoder_Output.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A
REG_INPUT[0] => REG_INPUT[0].IN1
REG_INPUT[1] => REG_INPUT[1].IN1
REG_INPUT[2] => REG_INPUT[2].IN1
REG_INPUT[3] => REG_INPUT[3].IN1
REG_INPUT[4] => REG_INPUT[4].IN1
REG_INPUT[5] => REG_INPUT[5].IN1
REG_INPUT[6] => REG_INPUT[6].IN1
REG_INPUT[7] => REG_INPUT[7].IN1
control => control.IN8
clk => rmux[0].DFF.CLK
clk => rmux[1].DFF.CLK
clk => rmux[2].DFF.CLK
clk => rmux[3].DFF.CLK
clk => rmux[4].DFF.CLK
clk => rmux[5].DFF.CLK
clk => rmux[6].DFF.CLK
clk => rmux[7].DFF.CLK
Reset => rmux[0].DFF.ACLR
Reset => rmux[1].DFF.ACLR
Reset => rmux[2].DFF.ACLR
Reset => rmux[3].DFF.ACLR
Reset => rmux[4].DFF.ACLR
Reset => rmux[5].DFF.ACLR
Reset => rmux[6].DFF.ACLR
Reset => rmux[7].DFF.ACLR
REG_OUTPUT[0] <= dffQ[0].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[1] <= dffQ[1].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[2] <= dffQ[2].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[3] <= dffQ[3].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[4] <= dffQ[4].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[5] <= dffQ[5].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[6] <= dffQ[6].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[7] <= dffQ[7].DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[0].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[1].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[2].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[3].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[4].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[5].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[6].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:A|_2to1mux:rmux[7].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B
REG_INPUT[0] => REG_INPUT[0].IN1
REG_INPUT[1] => REG_INPUT[1].IN1
REG_INPUT[2] => REG_INPUT[2].IN1
REG_INPUT[3] => REG_INPUT[3].IN1
REG_INPUT[4] => REG_INPUT[4].IN1
REG_INPUT[5] => REG_INPUT[5].IN1
REG_INPUT[6] => REG_INPUT[6].IN1
REG_INPUT[7] => REG_INPUT[7].IN1
control => control.IN8
clk => rmux[0].DFF.CLK
clk => rmux[1].DFF.CLK
clk => rmux[2].DFF.CLK
clk => rmux[3].DFF.CLK
clk => rmux[4].DFF.CLK
clk => rmux[5].DFF.CLK
clk => rmux[6].DFF.CLK
clk => rmux[7].DFF.CLK
Reset => rmux[0].DFF.ACLR
Reset => rmux[1].DFF.ACLR
Reset => rmux[2].DFF.ACLR
Reset => rmux[3].DFF.ACLR
Reset => rmux[4].DFF.ACLR
Reset => rmux[5].DFF.ACLR
Reset => rmux[6].DFF.ACLR
Reset => rmux[7].DFF.ACLR
REG_OUTPUT[0] <= dffQ[0].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[1] <= dffQ[1].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[2] <= dffQ[2].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[3] <= dffQ[3].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[4] <= dffQ[4].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[5] <= dffQ[5].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[6] <= dffQ[6].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[7] <= dffQ[7].DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[0].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[1].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[2].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[3].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[4].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[5].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[6].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:B|_2to1mux:rmux[7].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C
REG_INPUT[0] => REG_INPUT[0].IN1
REG_INPUT[1] => REG_INPUT[1].IN1
REG_INPUT[2] => REG_INPUT[2].IN1
REG_INPUT[3] => REG_INPUT[3].IN1
REG_INPUT[4] => REG_INPUT[4].IN1
REG_INPUT[5] => REG_INPUT[5].IN1
REG_INPUT[6] => REG_INPUT[6].IN1
REG_INPUT[7] => REG_INPUT[7].IN1
control => control.IN8
clk => rmux[0].DFF.CLK
clk => rmux[1].DFF.CLK
clk => rmux[2].DFF.CLK
clk => rmux[3].DFF.CLK
clk => rmux[4].DFF.CLK
clk => rmux[5].DFF.CLK
clk => rmux[6].DFF.CLK
clk => rmux[7].DFF.CLK
Reset => rmux[0].DFF.ACLR
Reset => rmux[1].DFF.ACLR
Reset => rmux[2].DFF.ACLR
Reset => rmux[3].DFF.ACLR
Reset => rmux[4].DFF.ACLR
Reset => rmux[5].DFF.ACLR
Reset => rmux[6].DFF.ACLR
Reset => rmux[7].DFF.ACLR
REG_OUTPUT[0] <= dffQ[0].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[1] <= dffQ[1].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[2] <= dffQ[2].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[3] <= dffQ[3].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[4] <= dffQ[4].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[5] <= dffQ[5].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[6] <= dffQ[6].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[7] <= dffQ[7].DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[0].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[1].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[2].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[3].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[4].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[5].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[6].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:C|_2to1mux:rmux[7].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D
REG_INPUT[0] => REG_INPUT[0].IN1
REG_INPUT[1] => REG_INPUT[1].IN1
REG_INPUT[2] => REG_INPUT[2].IN1
REG_INPUT[3] => REG_INPUT[3].IN1
REG_INPUT[4] => REG_INPUT[4].IN1
REG_INPUT[5] => REG_INPUT[5].IN1
REG_INPUT[6] => REG_INPUT[6].IN1
REG_INPUT[7] => REG_INPUT[7].IN1
control => control.IN8
clk => rmux[0].DFF.CLK
clk => rmux[1].DFF.CLK
clk => rmux[2].DFF.CLK
clk => rmux[3].DFF.CLK
clk => rmux[4].DFF.CLK
clk => rmux[5].DFF.CLK
clk => rmux[6].DFF.CLK
clk => rmux[7].DFF.CLK
Reset => rmux[0].DFF.ACLR
Reset => rmux[1].DFF.ACLR
Reset => rmux[2].DFF.ACLR
Reset => rmux[3].DFF.ACLR
Reset => rmux[4].DFF.ACLR
Reset => rmux[5].DFF.ACLR
Reset => rmux[6].DFF.ACLR
Reset => rmux[7].DFF.ACLR
REG_OUTPUT[0] <= dffQ[0].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[1] <= dffQ[1].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[2] <= dffQ[2].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[3] <= dffQ[3].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[4] <= dffQ[4].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[5] <= dffQ[5].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[6] <= dffQ[6].DB_MAX_OUTPUT_PORT_TYPE
REG_OUTPUT[7] <= dffQ[7].DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[0].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[1].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[2].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[3].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[4].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[5].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[6].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_Registers8bit:D|_2to1mux:rmux[7].regMux
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1
data0in[0] => data0in[0].IN1
data0in[1] => data0in[1].IN1
data0in[2] => data0in[2].IN1
data0in[3] => data0in[3].IN1
data0in[4] => data0in[4].IN1
data0in[5] => data0in[5].IN1
data0in[6] => data0in[6].IN1
data0in[7] => data0in[7].IN1
data1in[0] => data1in[0].IN1
data1in[1] => data1in[1].IN1
data1in[2] => data1in[2].IN1
data1in[3] => data1in[3].IN1
data1in[4] => data1in[4].IN1
data1in[5] => data1in[5].IN1
data1in[6] => data1in[6].IN1
data1in[7] => data1in[7].IN1
data2in[0] => data2in[0].IN1
data2in[1] => data2in[1].IN1
data2in[2] => data2in[2].IN1
data2in[3] => data2in[3].IN1
data2in[4] => data2in[4].IN1
data2in[5] => data2in[5].IN1
data2in[6] => data2in[6].IN1
data2in[7] => data2in[7].IN1
data3in[0] => data3in[0].IN1
data3in[1] => data3in[1].IN1
data3in[2] => data3in[2].IN1
data3in[3] => data3in[3].IN1
data3in[4] => data3in[4].IN1
data3in[5] => data3in[5].IN1
data3in[6] => data3in[6].IN1
data3in[7] => data3in[7].IN1
Select[0] => Select[0].IN2
Select[1] => Select[1].IN1
muxresult[0] <= _8WideBusMux:mux2.result
muxresult[1] <= _8WideBusMux:mux2.result
muxresult[2] <= _8WideBusMux:mux2.result
muxresult[3] <= _8WideBusMux:mux2.result
muxresult[4] <= _8WideBusMux:mux2.result
muxresult[5] <= _8WideBusMux:mux2.result
muxresult[6] <= _8WideBusMux:mux2.result
muxresult[7] <= _8WideBusMux:mux2.result


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0
dataa[0] => dataa[0].IN1
dataa[1] => dataa[1].IN1
dataa[2] => dataa[2].IN1
dataa[3] => dataa[3].IN1
dataa[4] => dataa[4].IN1
dataa[5] => dataa[5].IN1
dataa[6] => dataa[6].IN1
dataa[7] => dataa[7].IN1
datab[0] => datab[0].IN1
datab[1] => datab[1].IN1
datab[2] => datab[2].IN1
datab[3] => datab[3].IN1
datab[4] => datab[4].IN1
datab[5] => datab[5].IN1
datab[6] => datab[6].IN1
datab[7] => datab[7].IN1
control => control.IN8
result[0] <= _2to1mux:BusMux[0].mux1.mxout
result[1] <= _2to1mux:BusMux[1].mux1.mxout
result[2] <= _2to1mux:BusMux[2].mux1.mxout
result[3] <= _2to1mux:BusMux[3].mux1.mxout
result[4] <= _2to1mux:BusMux[4].mux1.mxout
result[5] <= _2to1mux:BusMux[5].mux1.mxout
result[6] <= _2to1mux:BusMux[6].mux1.mxout
result[7] <= _2to1mux:BusMux[7].mux1.mxout


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[0].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[1].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[2].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[3].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[4].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[5].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[6].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux0|_2to1mux:BusMux[7].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1
dataa[0] => dataa[0].IN1
dataa[1] => dataa[1].IN1
dataa[2] => dataa[2].IN1
dataa[3] => dataa[3].IN1
dataa[4] => dataa[4].IN1
dataa[5] => dataa[5].IN1
dataa[6] => dataa[6].IN1
dataa[7] => dataa[7].IN1
datab[0] => datab[0].IN1
datab[1] => datab[1].IN1
datab[2] => datab[2].IN1
datab[3] => datab[3].IN1
datab[4] => datab[4].IN1
datab[5] => datab[5].IN1
datab[6] => datab[6].IN1
datab[7] => datab[7].IN1
control => control.IN8
result[0] <= _2to1mux:BusMux[0].mux1.mxout
result[1] <= _2to1mux:BusMux[1].mux1.mxout
result[2] <= _2to1mux:BusMux[2].mux1.mxout
result[3] <= _2to1mux:BusMux[3].mux1.mxout
result[4] <= _2to1mux:BusMux[4].mux1.mxout
result[5] <= _2to1mux:BusMux[5].mux1.mxout
result[6] <= _2to1mux:BusMux[6].mux1.mxout
result[7] <= _2to1mux:BusMux[7].mux1.mxout


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[0].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[1].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[2].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[3].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[4].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[5].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[6].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux1|_2to1mux:BusMux[7].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2
dataa[0] => dataa[0].IN1
dataa[1] => dataa[1].IN1
dataa[2] => dataa[2].IN1
dataa[3] => dataa[3].IN1
dataa[4] => dataa[4].IN1
dataa[5] => dataa[5].IN1
dataa[6] => dataa[6].IN1
dataa[7] => dataa[7].IN1
datab[0] => datab[0].IN1
datab[1] => datab[1].IN1
datab[2] => datab[2].IN1
datab[3] => datab[3].IN1
datab[4] => datab[4].IN1
datab[5] => datab[5].IN1
datab[6] => datab[6].IN1
datab[7] => datab[7].IN1
control => control.IN8
result[0] <= _2to1mux:BusMux[0].mux1.mxout
result[1] <= _2to1mux:BusMux[1].mux1.mxout
result[2] <= _2to1mux:BusMux[2].mux1.mxout
result[3] <= _2to1mux:BusMux[3].mux1.mxout
result[4] <= _2to1mux:BusMux[4].mux1.mxout
result[5] <= _2to1mux:BusMux[5].mux1.mxout
result[6] <= _2to1mux:BusMux[6].mux1.mxout
result[7] <= _2to1mux:BusMux[7].mux1.mxout


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[0].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[1].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[2].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[3].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[4].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[5].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[6].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output1|_8WideBusMux:mux2|_2to1mux:BusMux[7].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0
data0in[0] => data0in[0].IN1
data0in[1] => data0in[1].IN1
data0in[2] => data0in[2].IN1
data0in[3] => data0in[3].IN1
data0in[4] => data0in[4].IN1
data0in[5] => data0in[5].IN1
data0in[6] => data0in[6].IN1
data0in[7] => data0in[7].IN1
data1in[0] => data1in[0].IN1
data1in[1] => data1in[1].IN1
data1in[2] => data1in[2].IN1
data1in[3] => data1in[3].IN1
data1in[4] => data1in[4].IN1
data1in[5] => data1in[5].IN1
data1in[6] => data1in[6].IN1
data1in[7] => data1in[7].IN1
data2in[0] => data2in[0].IN1
data2in[1] => data2in[1].IN1
data2in[2] => data2in[2].IN1
data2in[3] => data2in[3].IN1
data2in[4] => data2in[4].IN1
data2in[5] => data2in[5].IN1
data2in[6] => data2in[6].IN1
data2in[7] => data2in[7].IN1
data3in[0] => data3in[0].IN1
data3in[1] => data3in[1].IN1
data3in[2] => data3in[2].IN1
data3in[3] => data3in[3].IN1
data3in[4] => data3in[4].IN1
data3in[5] => data3in[5].IN1
data3in[6] => data3in[6].IN1
data3in[7] => data3in[7].IN1
Select[0] => Select[0].IN2
Select[1] => Select[1].IN1
muxresult[0] <= _8WideBusMux:mux2.result
muxresult[1] <= _8WideBusMux:mux2.result
muxresult[2] <= _8WideBusMux:mux2.result
muxresult[3] <= _8WideBusMux:mux2.result
muxresult[4] <= _8WideBusMux:mux2.result
muxresult[5] <= _8WideBusMux:mux2.result
muxresult[6] <= _8WideBusMux:mux2.result
muxresult[7] <= _8WideBusMux:mux2.result


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0
dataa[0] => dataa[0].IN1
dataa[1] => dataa[1].IN1
dataa[2] => dataa[2].IN1
dataa[3] => dataa[3].IN1
dataa[4] => dataa[4].IN1
dataa[5] => dataa[5].IN1
dataa[6] => dataa[6].IN1
dataa[7] => dataa[7].IN1
datab[0] => datab[0].IN1
datab[1] => datab[1].IN1
datab[2] => datab[2].IN1
datab[3] => datab[3].IN1
datab[4] => datab[4].IN1
datab[5] => datab[5].IN1
datab[6] => datab[6].IN1
datab[7] => datab[7].IN1
control => control.IN8
result[0] <= _2to1mux:BusMux[0].mux1.mxout
result[1] <= _2to1mux:BusMux[1].mux1.mxout
result[2] <= _2to1mux:BusMux[2].mux1.mxout
result[3] <= _2to1mux:BusMux[3].mux1.mxout
result[4] <= _2to1mux:BusMux[4].mux1.mxout
result[5] <= _2to1mux:BusMux[5].mux1.mxout
result[6] <= _2to1mux:BusMux[6].mux1.mxout
result[7] <= _2to1mux:BusMux[7].mux1.mxout


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[0].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[1].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[2].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[3].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[4].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[5].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[6].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux0|_2to1mux:BusMux[7].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1
dataa[0] => dataa[0].IN1
dataa[1] => dataa[1].IN1
dataa[2] => dataa[2].IN1
dataa[3] => dataa[3].IN1
dataa[4] => dataa[4].IN1
dataa[5] => dataa[5].IN1
dataa[6] => dataa[6].IN1
dataa[7] => dataa[7].IN1
datab[0] => datab[0].IN1
datab[1] => datab[1].IN1
datab[2] => datab[2].IN1
datab[3] => datab[3].IN1
datab[4] => datab[4].IN1
datab[5] => datab[5].IN1
datab[6] => datab[6].IN1
datab[7] => datab[7].IN1
control => control.IN8
result[0] <= _2to1mux:BusMux[0].mux1.mxout
result[1] <= _2to1mux:BusMux[1].mux1.mxout
result[2] <= _2to1mux:BusMux[2].mux1.mxout
result[3] <= _2to1mux:BusMux[3].mux1.mxout
result[4] <= _2to1mux:BusMux[4].mux1.mxout
result[5] <= _2to1mux:BusMux[5].mux1.mxout
result[6] <= _2to1mux:BusMux[6].mux1.mxout
result[7] <= _2to1mux:BusMux[7].mux1.mxout


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[0].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[1].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[2].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[3].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[4].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[5].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[6].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux1|_2to1mux:BusMux[7].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2
dataa[0] => dataa[0].IN1
dataa[1] => dataa[1].IN1
dataa[2] => dataa[2].IN1
dataa[3] => dataa[3].IN1
dataa[4] => dataa[4].IN1
dataa[5] => dataa[5].IN1
dataa[6] => dataa[6].IN1
dataa[7] => dataa[7].IN1
datab[0] => datab[0].IN1
datab[1] => datab[1].IN1
datab[2] => datab[2].IN1
datab[3] => datab[3].IN1
datab[4] => datab[4].IN1
datab[5] => datab[5].IN1
datab[6] => datab[6].IN1
datab[7] => datab[7].IN1
control => control.IN8
result[0] <= _2to1mux:BusMux[0].mux1.mxout
result[1] <= _2to1mux:BusMux[1].mux1.mxout
result[2] <= _2to1mux:BusMux[2].mux1.mxout
result[3] <= _2to1mux:BusMux[3].mux1.mxout
result[4] <= _2to1mux:BusMux[4].mux1.mxout
result[5] <= _2to1mux:BusMux[5].mux1.mxout
result[6] <= _2to1mux:BusMux[6].mux1.mxout
result[7] <= _2to1mux:BusMux[7].mux1.mxout


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[0].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[1].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[2].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[3].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[4].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[5].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[6].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


|_4x8BitRegisters|_8Wide4To1BusMux:Output0|_8WideBusMux:mux2|_2to1mux:BusMux[7].mux1
i0 => topAndOut.IN0
i1 => bottomAndOut.IN0
sel => bottomAndOut.IN1
sel => topAndOut.IN1
mxout <= mxout.DB_MAX_OUTPUT_PORT_TYPE


